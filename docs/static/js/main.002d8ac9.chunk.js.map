{"version":3,"sources":["helpers/connectMetamask.js","helpers/sendMeta.js","components/FromMeta.js","hooks/useForm.js","hooks/modeReducer.js","components/ButtonColor.js","components/Content.js","App.js","index.js"],"names":["connectMetamask","a","Web3","require","window","ethereum","web3","request","method","then","val","swal","catch","err","eth","getAccounts","accounts","form","sendMeta","amount","recipient","from","utils","isAddress","Number","sendTransaction","to","value","result","error","FromMeta","initialState","useState","state","setState","target","name","useForm","address","valueChange","setstate","useEffect","id","className","onSubmit","e","preventDefault","htmlFor","onChange","type","modeReducer","action","style","document","documentElement","setProperty","bool","localStorage","getItem","ButtonColor","useReducer","dispatch","setItem","onClick","Content","src","alt","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.002d8ac9.chunk.js","sourcesContent":["import swal from 'sweetalert';\r\n\r\nexport const connectMetamask = async() => {\r\n\r\n    const Web3 = require(\"web3\");\r\n    let form;\r\n    let web3;\r\n\r\n    if (window.ethereum) {\r\n          web3 = new Web3(window.ethereum);\r\n          \r\n          try {\r\n            await window.ethereum.request({ method: 'eth_requestAccounts' })\r\n                    .then(val => swal(\"Successful connection!\", \"Make your transactions.\", \"success\"))\r\n                    .catch(err => swal(\"Need a provider!\", \"You will not be able to make transactions.\", \"info\"));\r\n\r\n            const accounts = await web3.eth.getAccounts();\r\n    \r\n            form = accounts;\r\n    \r\n          } catch (err) {\r\n            form = [\"MetaMask no se encontro.\"];\r\n          }\r\n    } else {\r\n            form = [\"Necesita un Wallet\"]\r\n    }\r\n\r\n    return form\r\n\r\n}\r\n\r\n\r\n\r\n","import swal from 'sweetalert';\r\n\r\nexport const sendMeta = async(amount, recipient, from) => {\r\n\r\n    const Web3 = require(\"web3\");\r\n\r\n    const web3 = new Web3(window.ethereum);\r\n\r\n    if (!web3.utils.isAddress(recipient)) {\r\n      return [ 'Dirección inválida' ];\r\n    }\r\n  \r\n    if (Number(amount) <= 0) {\r\n      return [ 'Cantidad inválida' ];\r\n    }\r\n    \r\n    web3.eth.sendTransaction({\r\n        from,\r\n        to: recipient,\r\n        value: amount,\r\n        }).then((result) => {\r\n            swal(\"Transaction sent!\", \"\", \"success\");\r\n        })\r\n        .catch((error) => {\r\n            swal(\"Transaction Denied!\", \"\", \"error\");\r\n        });\r\n  }","import React from 'react'\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connectMetamask } from '../helpers/connectMetamask';\r\nimport { sendMeta } from '../helpers/sendMeta';\r\nimport { useForm } from '../hooks/useForm'\r\n\r\nexport const FromMeta = () => {\r\n\r\n    const [ value, valueChange ] = useForm({\r\n        address: \"\",\r\n        amount: \"\"\r\n    });\r\n\r\n    const { address, amount } = value;\r\n    const [state, setstate] = useState([])\r\n\r\n    useEffect(() => {\r\n      connectMetamask().then( val => {\r\n          setstate(val)\r\n      } ) \r\n    }, [])\r\n\r\n    \r\n\r\n    const handleOnSubmit = (e) => {\r\n      e.preventDefault();\r\n      sendMeta( amount, address, state[0] );\r\n    }\r\n\r\n    return (\r\n      <>\r\n          <div id=\"formulario\">\r\n            <form className=\"formulario m-0\" onSubmit={ handleOnSubmit }>\r\n              <label className=\"form-label m-0\">Your address</label>\r\n              <div className=\"text-center text-nowrap fs-6 fs-md-5 fs-lg-4 mb-4 mt-1 link-warning fst-italic fw-bolder\">{ state }</div>\r\n              <div className=\"mb-3\">\r\n                  <label htmlFor=\"inputReceptor\" className=\"form-label\">Receiver address</label>\r\n                  <input onChange={ valueChange } name=\"address\" value={ address } type=\"text\" className=\"user-input form-control\" id=\"inputReceptor\" aria-describedby=\"receiverAddress\"></input>\r\n                  <div id=\"receiverAddress\" className=\"form-text form-text__mutted\">Please enter a correct address.</div>\r\n                </div>\r\n              <div className=\"mb-3\">\r\n                <label htmlFor=\"inputAmount\" className=\"form-label\">Amount ( Wei )</label>\r\n                <input onChange={ valueChange } name=\"amount\" value={ amount } type=\"number\" className=\"user-input form-control\" id=\"inputAmount\"></input>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-outline-dark\">Send</button>\r\n            </form>\r\n          </div>\r\n        </>\r\n    )\r\n}\r\n","import  { useState } from 'react'\r\n\r\nexport const useForm = (initialState={}) => {\r\n\r\n    const [ state, setState ] = useState(initialState);\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n        setState( {\r\n            ...state,\r\n            [ target.name ]: target.value\r\n        } )\r\n    }\r\n\r\n    return [ state, handleInputChange ]\r\n}\r\n","\r\nexport const modeReducer = (action, state=[]) => {\r\n    const style = document.documentElement.style;\r\n    \r\n    switch (action.type) {\r\n        case \"white\":\r\n\r\n            style.setProperty('--bg-white', \"#fff\");\r\n            style.setProperty('--text-gray', \"rgb(41, 41, 41)\");\r\n            style.setProperty('--text-muted', \"#6c757d\");\r\n            style.setProperty('--input-text', \"#707070\");\r\n            style.setProperty('--color-meta', \"#f6851b\");\r\n            style.setProperty('--shadow-meta', \"#f6851b8a\");\r\n            \r\n            return state;\r\n\r\n        case \"dark\":\r\n            \r\n            style.setProperty('--bg-white', \"rgb(91, 91, 91)\");\r\n            style.setProperty('--text-gray', \"#fff\");\r\n            style.setProperty('--text-muted', \"#d9d9d9\");\r\n            style.setProperty('--input-text', \"#f6f6f6\");\r\n            style.setProperty('--color-meta', \"#ffcd75\");\r\n            style.setProperty('--shadow-meta', \"#ffdc9e\");\r\n\r\n            return state;\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\nimport { useEffect, useReducer } from 'react';\r\nimport { modeReducer } from '../hooks/modeReducer';\r\nlet bool = localStorage.getItem(\"mode\") || true;\r\nexport const ButtonColor = () => {\r\n\r\n    const [state, dispatch] = useReducer(modeReducer, true);\r\n    useEffect(() => {\r\n        localStorage.setItem(\"mode\", bool);\r\n    }, [bool])\r\n    const handleButtonOnClick = () => {\r\n        bool = !bool;\r\n        return bool?( dispatch({ type: \"white\" }, state) ): ( dispatch({ type: \"dark\" }, state) )\r\n\r\n    }\r\n\r\n    return (\r\n        <div onClick={ handleButtonOnClick } className=\"mode\">\r\n          <i className=\"far fa-moon\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Content = () => {\r\n    return (\r\n        <>\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"meta-logo\">\r\n                    <img src=\"assets/fox.png\" alt=\"metamask-transaction\"></img>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"h2 fw-bold text-center title mb-4\">\r\n                Make transactions easily and quickly.\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { FromMeta } from './components/FromMeta';\r\nimport './App.css';\r\nimport { ButtonColor } from './components/ButtonColor';\r\nimport { Content } from './components/Content';\r\n\r\nexport const App = () => {\r\n  return <>\r\n    <Content/>\r\n    <FromMeta/>\r\n    <ButtonColor/>\r\n  </>\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}